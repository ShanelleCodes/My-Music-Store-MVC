// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MusicStore.DataAccess.Data;

#nullable disable

namespace MusicStore.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240210222825_addForeignKeyForCategoryProductRelation")]
    partial class addForeignKeyForCategoryProductRelation
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MusicStore.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DisplayOrder = 1,
                            Name = "RnB"
                        },
                        new
                        {
                            Id = 2,
                            DisplayOrder = 2,
                            Name = "Pop"
                        },
                        new
                        {
                            Id = 3,
                            DisplayOrder = 3,
                            Name = "Hip-Hop"
                        },
                        new
                        {
                            Id = 4,
                            DisplayOrder = 4,
                            Name = "Dance"
                        });
                });

            modelBuilder.Entity("MusicStore.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Album")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Artist")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("SongName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Album = "Confessions",
                            Artist = "Usher",
                            CategoryId = 3,
                            Genre = "Hip Hop",
                            Price = 0.98999999999999999,
                            SongName = "Yeah"
                        },
                        new
                        {
                            Id = 2,
                            Album = "Tyla",
                            Artist = "Tyla",
                            CategoryId = 1,
                            Genre = "Rnb",
                            Price = 1.99,
                            SongName = "Water"
                        },
                        new
                        {
                            Id = 3,
                            Album = "25",
                            Artist = "Adele",
                            CategoryId = 2,
                            Genre = "Pop",
                            Price = 0.98999999999999999,
                            SongName = "I miss you"
                        },
                        new
                        {
                            Id = 4,
                            Album = "N/A",
                            Artist = "Raye",
                            CategoryId = 4,
                            Genre = "Dance",
                            Price = 0.98999999999999999,
                            SongName = "Prada"
                        },
                        new
                        {
                            Id = 5,
                            Album = "Baduizm",
                            Artist = "Erykah Badu",
                            CategoryId = 1,
                            Genre = "RnB",
                            Price = 0.98999999999999999,
                            SongName = "On & On"
                        },
                        new
                        {
                            Id = 6,
                            Album = "Beautiful And Brutal Yard",
                            Artist = "JHus ft Drake",
                            CategoryId = 3,
                            Genre = "Hip Hop",
                            Price = 1.99,
                            SongName = "Who told you"
                        });
                });

            modelBuilder.Entity("MusicStore.Models.Product", b =>
                {
                    b.HasOne("MusicStore.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
